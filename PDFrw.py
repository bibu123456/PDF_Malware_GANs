import pdfrw

def parse_pdf_object(obj, depth=0, max_depth=10):
    output = ""
    if depth > max_depth:  # Limiting the recursion depth
        return "  " * depth + "Recursion limit reached\n"
    
    if isinstance(obj, pdfrw.PdfDict):
        output += "  " * depth + str(obj) + "\n"
        for key, value in obj.items():
            if key == '/Root':
                output += "  " * (depth + 1) + str(key) + ": " + str(value) + "\n"
            output += parse_pdf_object(value, depth + 1, max_depth)
    elif isinstance(obj, pdfrw.PdfArray):
        for item in obj:
            output += parse_pdf_object(item, depth + 1, max_depth)
    return output

def parse_pdf_tree(file_path):
    pdf = pdfrw.PdfReader(file_path)
    return parse_pdf_object(pdf)

# Example usage
pdf_path = './bae2021.pdf'  # Replace with your actual PDF file path
tree_representation = parse_pdf_tree(pdf_path)

# Writing the output to a file
output_path = './output.txt'
with open(output_path, 'w') as file:
    file.write(tree_representation)

output_path  # Returning the path to the output file

